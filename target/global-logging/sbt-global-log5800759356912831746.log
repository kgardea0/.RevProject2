[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.6.2 (Oracle Corporation Java 1.8.0_333)
[debug]       Load.loadUnit: plugins took 211.0198ms
[debug]       Load.loadUnit: defsScala took 0.542ms
[debug] [Loading] Scanning directory C:\Users\Justin\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Justin\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 36.3814 ms
[debug]           Load.resolveProject(global-plugins) took 90.3022ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Justin\.sbt\1.0\plugins, plugins: List(<none>))) took 174.4495ms
[debug] [Loading] Done in C:\Users\Justin\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 211.5551ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.3592ms
[debug]     Load.loadUnit(file:/C:/Users/Justin/.sbt/1.0/plugins/, ...) took 436.4691ms
[debug]   Load.apply: load took 698.2097ms
[debug]   Load.apply: resolveProjects took 7.9933ms
[debug]   Load.apply: finalTransforms took 104.7329ms
[debug]   Load.apply: config.delegates took 12.6892ms
[debug]   Load.apply: Def.make(settings)... took 611.2815ms
[debug]   Load.apply: structureIndex took 123.8712ms
[debug]   Load.apply: mkStreams took 1.4417ms
[info] loading global plugins from C:\Users\Justin\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 3867.2442ms
[debug]           Load.loadUnit: plugins took 48.1209ms
[debug]           Load.loadUnit: defsScala took 0.0037ms
[debug] [Loading] Scanning directory C:\Users\Justin\Desktop\spark3demo\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Justin\Desktop\spark3demo\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.8048 ms
[debug]               Load.resolveProject(spark3demo-build) took 1.855ms
[debug]             Load.loadTransitive: finalizeProject(Project(id spark3demo-build, base: C:\Users\Justin\Desktop\spark3demo\project, plugins: List(<none>))) took 5.1027ms
[debug] [Loading] Done in C:\Users\Justin\Desktop\spark3demo\project, returning: (spark3demo-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 7.3684ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.0159ms
[debug]         Load.loadUnit(file:/C:/Users/Justin/Desktop/spark3demo/project/, ...) took 56.984ms
[debug]       Load.apply: load took 59.2965ms
[debug]       Load.apply: resolveProjects took 0.1086ms
[debug]       Load.apply: finalTransforms took 20.6315ms
[debug]       Load.apply: config.delegates took 0.3287ms
[debug]       Load.apply: Def.make(settings)... took 76.1817ms
[debug]       Load.apply: structureIndex took 47.0103ms
[debug]       Load.apply: mkStreams took 0.0026ms
[info] loading project definition from C:\Users\Justin\Desktop\spark3demo\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 625.5764ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\Justin\Desktop\spark3demo
[debug]       Load.loadUnit: mkEval took 6.8325ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 1.9657 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 2.7ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\Justin\Desktop\spark3demo, plugins: List(<none>))) took 5.546ms
[debug] [Loading] Done in C:\Users\Justin\Desktop\spark3demo, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 279.2303ms
[debug]     Load.loadUnit: cleanEvalClasses took 9.7901ms
[debug]   Load.loadUnit(file:/C:/Users/Justin/Desktop/spark3demo/, ...) took 915.302ms
[debug] Load.apply: load took 917.4439ms
[debug] Load.apply: resolveProjects took 0.085ms
[debug] Load.apply: finalTransforms took 7.6553ms
[debug] Load.apply: config.delegates took 0.2545ms
[debug] Load.apply: Def.make(settings)... took 55.0389ms
[debug] Load.apply: structureIndex took 24.5775ms
[debug] Load.apply: mkStreams took 0.0021ms
[info] set current project to spark2demo (in build file:/C:/Users/Justin/Desktop/spark3demo/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(~run, None, None)
[info] sbt server started at local:sbt-server-eb328d9403aa5fba9042
[debug] Writing bsp connection file
[info] started sbt server
[debug] > Exec(__runWatch console0, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(__preWatch console0, None, None)
[debug] > Exec(run, None, None)
[debug] Evaluating tasks: Compile / run
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[info] compiling 1 Scala source to C:\Users\Justin\Desktop\spark3demo\target\scala-2.11\classes ...
[info] Non-compiled module 'compiler-bridge_2.11' for Scala 2.11.12. Compiling...
[info]   Compilation completed in 11.099s.
[info] done compiling
[error] java.lang.ArrayIndexOutOfBoundsException: 0
[error] 	at retail_db.GetRevenuePerOrder$.main(GetRevenuePerOrder.scala:8)
[error] 	at retail_db.GetRevenuePerOrder.main(GetRevenuePerOrder.scala)
[error] 	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
[error] 	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
[error] 	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
[error] 	at java.lang.reflect.Method.invoke(Method.java:498)
[error] 	at sbt.Run.invokeMain(Run.scala:143)
[error] 	at sbt.Run.execute$1(Run.scala:93)
[error] 	at sbt.Run.$anonfun$runWithLoader$5(Run.scala:120)
[error] 	at sbt.Run$.executeSuccess(Run.scala:186)
[error] 	at sbt.Run.runWithLoader(Run.scala:120)
[error] 	at sbt.Defaults$.$anonfun$bgRunTask$6(Defaults.scala:1983)
[error] 	at sbt.Defaults$.$anonfun$termWrapper$2(Defaults.scala:1922)
[error] 	at scala.runtime.java8.JFunction0$mcV$sp.apply(JFunction0$mcV$sp.java:23)
[error] 	at scala.util.Try$.apply(Try.scala:213)
[error] 	at sbt.internal.BackgroundThreadPool$BackgroundRunnable.run(DefaultBackgroundJobService.scala:369)
[error] 	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
[error] 	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
[error] 	at java.lang.Thread.run(Thread.java:750)
[error] (Compile / run) java.lang.ArrayIndexOutOfBoundsException: 0
[error] Total time: 26 s, completed May 24, 2022 9:40:27 AM
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(__postWatch console0, None, None)
[debug] > Exec(__waitWatch console0, None, None)
